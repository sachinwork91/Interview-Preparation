https://leetcode.com/problems/count-and-say/

The count-and-say sequence is the sequence of integers with the first five terms as following:

1.     1
2.     11
3.     21
4.     1211
5.     111221
1 is read off as "one 1" or 11.
11 is read off as "two 1s" or 21.
21 is read off as "one 2, then one 1" or 1211.

Given an integer n where 1 ≤ n ≤ 30, generate the nth term of the count-and-say sequence. You can do so recursively, in other words from the previous member read off the digits, counting the number of digits in groups of the same digit.

Note: Each term of the sequence of integers will be represented as a string.






// For count and say basicall construct a string with by counting the number of times the
// digit is appearing and printing count and digit. 

class Solution {
    public String countAndSay(int n) {
        
        StringBuilder sb = new StringBuilder();
        sb.append("1");
        // n-1 since the "1" string is already there 
        for(int i=0 ;i<n-1 ;i++) {
            StringBuilder temp = new StringBuilder();
            for(int j = 0; j < sb.length() ; ) {
                int count = 1 ;
                int start = j;
                
                while(j+1<sb.length() && sb.charAt(j)== sb.charAt(j+1)) { 
                count++; j++;
                }
                temp.append(count+"");
                temp.append(sb.charAt(start));
                j++;
            }
            sb = temp;
        }
        return sb.toString();
        
    }
}
