https://leetcode.com/problems/3sum/

// Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? 
// Find all unique triplets in the array which gives the sum of zero.

// Note:

//The solution set must not contain duplicate triplets.

Time - O(n2)
Space - O(3*k), k is number of triplets
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
    Arrays.sort(nums);
    List<List<Integer>> res = new ArrayList<>();
    for (int i = 0; i < nums.length-2; ++i)
        if (i == 0 || nums[i - 1] != nums[i])
            twoSumII(nums, i, res);
    return res;
}
void twoSumII(int[] nums, int i, List<List<Integer>> res) {
    int lo = i + 1, hi = nums.length - 1;
    while (lo < hi) {
        int sum = nums[i] + nums[lo] + nums[hi];
        if (sum < 0 )
            ++lo;
        else if (sum > 0 )
            --hi;
        else {
            res.add(Arrays.asList(nums[i], nums[lo++], nums[hi--]));
            while(lo<hi && nums[lo] == nums[lo-1]) {
                lo++;
            }
            while(hi>lo && nums[hi] ==nums[hi+1]) {
                hi--;
            }
        }
    }
}
}
